#!/bin/bash
echo "Executing post-merge hook..."
cur_branch=$(git branch --show-current)
mod_files=($(git log -m --name-only --pretty="format:" --merges))
git_root=$(git rev-parse --show-toplevel)

dockerfile_update_version() {
  # $1 = version file

  cur_version=$(cat $1)
  parsed_version=(${cur_version//./ })
  major="${parsed_version[0]}"
  minor="${parsed_version[1]}"
  patch="${parsed_version[2]}"

  if [ "${cur_branch}" == "main" ]; then
    # New major version if in main branch
    major=$((major+1))
    minor=0
    patch=0
  elif [ "${cur_branch}" == "dev" ]; then
    # New minor version if in dev branch
    minor=$((minor+1))
    patch=0
  else
    # New patch if in any other branch
    patch=$((patch+1))
  fi

  new_version="${major}.${minor}.${patch}"
  git_msg="$(basename ${1})(${cur_version}): Changing version to ${new_version}"

  echo "${git_msg}"
  echo "${new_version}" > "${1}"

  git add "${1}"
  git commit -m "${git_msg}"
}

# Find modified dockerfiles and increment versions accordingly
for file in "${mod_files[@]}"; do
  if [[ "${file}" =~ "Dockerfile." ]]; then
    # Skip version files
    if [[ "${file}" =~ ".version" ]]; then
      continue
    fi

    version_file="${file}.version"
    if [ ! -f "${version_file}" ]; then
      # Ensure version file exista for this Dockerfile
      echo "0.0.0" > "${version_file}"
    fi

    dockerfile_update_version "${file}.version"
  fi
done
